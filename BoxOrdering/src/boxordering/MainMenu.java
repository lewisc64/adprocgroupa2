package boxordering;

import java.math.BigDecimal;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MainMenu extends javax.swing.JFrame {

    public MainMenu() {
        initComponents();
    }
    
    private ArrayList<Box> boxes = new ArrayList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        addBox = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        totalCostLabel = new javax.swing.JLabel();
        boxCountLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableOfBoxes = new javax.swing.JTable();
        removeBox = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        addBox.setText("Add Boxes");
        addBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Flex Box Ordering System");

        jButton1.setText("Remove All Boxes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        totalCostLabel.setText("£0");

        boxCountLabel.setText("0");

        jLabel3.setText("Total Cost:");

        jLabel4.setText("Boxes Ordered:");

        tableOfBoxes.setModel(new DefaultTableModel());
        jScrollPane2.setViewportView(tableOfBoxes);

        removeBox.setText("Remove Selected Box");
        removeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(removeBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(addBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalCostLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(boxCountLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(boxCountLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(totalCostLabel))
                        .addGap(59, 59, 59))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancel() {
        setVisible(true);
        JOptionPane.showMessageDialog(null,
                "The 'Add box' operation has been cancelled.",
                "Cancellation",
                JOptionPane.INFORMATION_MESSAGE);
    }

    private void update() {
        int boxCount = 0;
        BigDecimal price;
        BigDecimal totalPrice = new BigDecimal(0);
        DefaultTableModel model = (DefaultTableModel) tableOfBoxes.getModel();
        
        if (model.getColumnCount() == 0) {
            model.addColumn("Type");
            //model.addColumn("Cardboard Grade");
            model.addColumn("Dimensions");
            model.addColumn("Cost");
        }
        
        model.setRowCount(0);
        
        for (Box box : boxes) {
            boxCount = boxCount + 1;
            price = box.calculatePrice();
            totalPrice = totalPrice.add(price);
            
            model.addRow(new Object[] {
                box.getType(),
                box.getDimensions(),
                "£" + price.toString()
            });
            
        }
        boxCountLabel.setText(Integer.toString(boxCount));
        totalCostLabel.setText("£" + totalPrice.toString());
    }

    /**
     * This function will open other forms determining the flow of how the user
     * orders boxes. It will flow in such a way that the user cannot input a box
     * that is unable to be supplied by Flexbox.
     *
     * @param evt
     */
    private void addBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBoxActionPerformed

        // declare all the box attributes used for Box initialisation.
        Box box; // may be initialised as a subclass of Box.
        int cardboardGrade;
        double width, length, height;
        boolean sealable;
        int colourType;
        Object reinforcedCorners;
        int quantity;

        // hide MainMenu form to avoid user confusion
        setVisible(false);

        BasicInfoForm infoForm = new BasicInfoForm();
        infoForm.setVisible(true);
        if (!infoForm.isValid()) {
            cancel();
            return;
        }
        BasicInfoFormResult infoResult = (BasicInfoFormResult) infoForm.getInfo();
        cardboardGrade = infoResult.grade;
        width = infoResult.width;
        height = infoResult.height;
        length = infoResult.length;
        sealable = infoResult.sealable;

        // with a cardboardGrade of 1, the user cannot have any colour.
        if (cardboardGrade == 1) {
            JOptionPane.showMessageDialog(null, "You will have no colours.", "Information", JOptionPane.INFORMATION_MESSAGE);
            colourType = 0;

            // with a cardboardGrade of 5, the user must have two colours.
        } else if (cardboardGrade == 5) {
            JOptionPane.showMessageDialog(null, "You will have two colours.", "Information", JOptionPane.INFORMATION_MESSAGE);
            colourType = 2;

            // any other cardboardGrade, the user can choose what colour they want.
        } else {

            ColourForm colourForm = new ColourForm();

            // the user must have one colour or two colours with a cardboardGrade of 4.
            if (cardboardGrade == 4) {
                colourForm.removeNoColourOption();
            }
            colourForm.setVisible(true);
            if (!colourForm.isValid()) {
                cancel();
                return;
            }
            colourType = (int) colourForm.getInfo();
        }

        // if the colourType is not 0, then the box is a coloured box, and might be reinforced.
        if (colourType != 0) {
            
            // if the colourType is 1, then the box cannot have any reinforcement.
            if (colourType == 1) {
                
                box = new ColourBox(width, length, height, cardboardGrade, sealable, colourType);

            } else {
                ReinforcedForm reinforcedForm = new ReinforcedForm();
                reinforcedForm.setVisible(true);
                if (!reinforcedForm.isValid()) {
                    cancel();
                    return;
                }
                reinforcedCorners = (Object) reinforcedForm.getInfo();
                
                if (reinforcedCorners == null) {
                    
                    box = new ColourBox(width, length, height, cardboardGrade, sealable, colourType);

                } else {
                    
                    box = new ReinforcedBox(width, length, height, cardboardGrade, sealable, colourType, (boolean) reinforcedCorners);

                }
            }
        } else {
            
            box = new BasicBox(width, length, height, cardboardGrade, sealable);
        }

        // get the amount of these boxes and clones them, adding the copies to the ArrayList.
        QuantityForm quantityForm = new QuantityForm();
        quantityForm.setVisible(true);
        if (!quantityForm.isValid()) {
            cancel();
            return;
        }
        quantity = (int) quantityForm.getInfo();

        JOptionPane.showMessageDialog(null, "You have ordered " + quantity
                + " of box type " + box.getType()
                + ", costing £" + box.calculatePrice().multiply(new BigDecimal(quantity)).toString(),
                "Information",
                JOptionPane.INFORMATION_MESSAGE);

        for (int i = 0; i < quantity; i++) {
            try {
                boxes.add((Box) box.clone());
            } catch (CloneNotSupportedException e) {
                throw new RuntimeException("Fatal: box clone failed.");
            }
        }

        // show main form, updated with the box order they just placed.
        setVisible(true);
        update();


    }//GEN-LAST:event_addBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boxes.clear();
        update();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void removeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBoxActionPerformed
        int i = tableOfBoxes.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "Please select a box in the table to delete.", "Unable to Delete", JOptionPane.WARNING_MESSAGE);
            return;
        }
        boxes.remove(i);
        update();
    }//GEN-LAST:event_removeBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBox;
    private javax.swing.JLabel boxCountLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton removeBox;
    private javax.swing.JTable tableOfBoxes;
    private javax.swing.JLabel totalCostLabel;
    // End of variables declaration//GEN-END:variables
}
